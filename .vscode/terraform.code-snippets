{
	"Base terraform resource/datasource": {
		"scope": "go",
		"prefix": "tf-templates",
		"body": [
			"//tfname: my_tfname",
			"// Usage: terraform-templates -filename $RELATIVE_FILEPATH",
			"package myPkgName"
		],
		"description": "Boilerplate for resource or data source terraform provider"
	},
	"Go Generate Import example": {
		"scope": "go",
		"prefix": "tf-generate-example-import",
		"body": [
			"//go:generate go run github.com/FrangipaneTeam/tf-doc-extractor@latest -filename \\$GOFILE -example-dir ../../../examples -resource"
		],
		"description": "Boilerplate for resource or data source terraform provider"
	},
	"Go Generate Resource example": {
		"scope": "go",
		"prefix": "tf-generate-example-resource",
		"body": [
			"//go:generate go run github.com/FrangipaneTeam/tf-doc-extractor@latest -filename \\$GOFILE -example-dir ../../examples -test"
		],
		"description": "Boilerplate for resource or data source terraform provider"
	},
	"Terraform Block Init Resource": {
		"scope": "go",
		"prefix": "tf-block-init-resource",
		"body": [
			"func (r *$struct) Init(ctx context.Context, rm *${struct}Model) (diags diag.Diagnostics) {",
			"    return",
			"}",
		],
	},
	"Terraform Block Init Datasource": {
		"scope": "go",
		"prefix": "tf-block-init-datasource",
		"body": [
			"func (d *$struct) Init(ctx context.Context, dm *${struct}Model) (diags diag.Diagnostics) {",
			"    return",
			"}",
		],
	},
	"Terraform Use Init Resource": {
		"scope": "go",
		"prefix": "tf-use-init-resource",
		"body": [
			"resp.Diagnostics.Append(r.Init(ctx, $struct)...)",
			"if resp.Diagnostics.HasError() {",
			"    return",
			"}"
		],
	},
	"Terraform Use Init Datasource": {
		"scope": "go",
		"prefix": "tf-use-init-datasource",
		"body": [
			"resp.Diagnostics.Append(d.Init(ctx, $struct)...)",
			"if resp.Diagnostics.HasError() {",
			"    return",
			"}"
		],
	},
}